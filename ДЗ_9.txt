
Практическое задание по теме “Транзакции, переменные, представления”

--Задание 1--
В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. 
Используйте транзакции.


START TRANSACTION; 
INSERT INTO sample.users (SELECT * FROM shop.users WHERE shop.users.id = 4);
COMMIT;


--Задание 2--
Создайте представление, которое выводит название name товарной позиции из таблицы products
и соответствующее название каталога name из таблицы catalogs.

CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `prod_catalogs` AS
    SELECT 
        `products`.`name` AS `product`,
        `catalogs`.`name` AS `catalog`
    FROM
        (`products`
        LEFT JOIN `catalogs` ON ((`products`.`catalog_id` = `catalogs`.`id`)))


--Задание 3--
(по желанию) Пусть имеется таблица с календарным полем created_at. 
В ней размещены разряженые календарные записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. 
Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, 
если дата присутствует в исходном таблице и 0, если она отсутствует.


--Задание 4--
(по желанию) Пусть имеется любая таблица с календарным полем created_at. 
Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.


Практическое задание по теме “Хранимые процедуры и функции, триггеры"

--Задание 1--
Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. 
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", 
с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", 
с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

CREATE FUNCTION `hello`() RETURNS text
    DETERMINISTIC
BEGIN
DECLARE hour INT;
SET hour = HOUR(NOW());
CASE 
		WHEN hour BETWEEN 6 AND 12 THEN
			RETURN 'Доброе утро';
		WHEN hour BETWEEN 12 AND 18 THEN
			RETURN 'Добрый день';
		WHEN hour BETWEEN 18 AND 00 THEN
			RETURN 'Добрый вечер';
		WHEN hour BETWEEN 00 AND 6 THEN
			RETURN 'Доброй ночи';
END CASE;
END


SELECT hello ();

--Задание 2--
В таблице products есть два текстовых поля: name с названием товара и description с его описанием. 
Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. 
Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. 
При попытке присвоить полям NULL-значение необходимо отменить операцию.


CREATE TRIGGER `products_BEFORE_INSERT` BEFORE INSERT ON `products` FOR EACH ROW BEGIN
IF (NEW.name IS NULL AND NEW.desription IS NULL) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Недопустимая ситуация! Заполните name, либо desription';
    END IF;
END


--Задание 3--
(по желанию) Напишите хранимую функцию для вычисления произвольного числа Фибоначчи. 
Числами Фибоначчи называется последовательность в которой число равно сумме двух предыдущих чисел. 
Вызов функции FIBONACCI(10) должен возвращать число 55.
